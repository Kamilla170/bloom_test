from config import STATE_EMOJI, STATE_NAMES, STATE_RECOMMENDATIONS

def format_plant_analysis(raw_text: str, confidence: float = None, state_info: dict = None) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º"""
    lines = [line.strip() for line in raw_text.split('\n') if line.strip()]
    formatted = ""
    
    plant_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ"
    confidence_level = confidence or 0
    
    for line in lines:
        if line.startswith("–†–ê–°–¢–ï–ù–ò–ï:"):
            plant_name = line.replace("–†–ê–°–¢–ï–ù–ò–ï:", "").strip()
            display_name = plant_name.split("(")[0].strip()
            formatted += f"üåø <b>{display_name}</b>\n"
            if "(" in plant_name:
                latin_name = plant_name[plant_name.find("(")+1:plant_name.find(")")]
                formatted += f"üè∑Ô∏è <i>{latin_name}</i>\n"
            
        elif line.startswith("–£–í–ï–†–ï–ù–ù–û–°–¢–¨:"):
            conf = line.replace("–£–í–ï–†–ï–ù–ù–û–°–¢–¨:", "").strip()
            try:
                confidence_level = float(conf.replace("%", ""))
                if confidence_level >= 80:
                    conf_icon = "üéØ"
                elif confidence_level >= 60:
                    conf_icon = "üé™"
                else:
                    conf_icon = "ü§î"
                formatted += f"{conf_icon} <b>–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:</b> {conf}\n\n"
            except:
                formatted += f"üé™ <b>–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:</b> {conf}\n\n"
        
        elif line.startswith("–¢–ï–ö–£–©–ï–ï_–°–û–°–¢–û–Ø–ù–ò–ï:"):
            pass
        
        elif line.startswith("–°–û–°–¢–û–Ø–ù–ò–ï:"):
            condition = line.replace("–°–û–°–¢–û–Ø–ù–ò–ï:", "").strip()
            if any(word in condition.lower() for word in ["–∑–¥–æ—Ä–æ–≤", "—Ö–æ—Ä–æ—à", "–æ—Ç–ª–∏—á–Ω", "–Ω–æ—Ä–º"]):
                icon = "‚úÖ"
            elif any(word in condition.lower() for word in ["–ø—Ä–æ–±–ª–µ–º", "–±–æ–ª–µ–Ω", "–ø–ª–æ—Ö", "—Å—Ç—Ä–µ—Å—Å"]):
                icon = "‚ö†Ô∏è"
            else:
                icon = "‚ÑπÔ∏è"
            formatted += f"{icon} <b>–û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:</b> {condition}\n\n"
        
        elif line.startswith("–ü–û–õ–ò–í_–ê–ù–ê–õ–ò–ó:"):
            analysis = line.replace("–ü–û–õ–ò–í_–ê–ù–ê–õ–ò–ó:", "").strip()
            if "–Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ" in analysis.lower() or "–Ω–µ –≤–∏–¥–Ω–∞" in analysis.lower():
                icon = "‚ùì"
            else:
                icon = "üíß"
            formatted += f"{icon} <b>–ê–Ω–∞–ª–∏–∑ –ø–æ–ª–∏–≤–∞:</b> {analysis}\n"
            
        elif line.startswith("–ü–û–õ–ò–í_–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"):
            recommendations = line.replace("–ü–û–õ–ò–í_–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:", "").strip()
            formatted += f"üí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b> {recommendations}\n"
            
        elif line.startswith("–ü–û–õ–ò–í_–ò–ù–¢–ï–†–í–ê–õ:"):
            interval = line.replace("–ü–û–õ–ò–í_–ò–ù–¢–ï–†–í–ê–õ:", "").strip()
            formatted += f"‚è∞ <b>–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ–ª–∏–≤–∞:</b> –∫–∞–∂–¥—ã–µ {interval} –¥–Ω–µ–π\n\n"
            
        elif line.startswith("–°–í–ï–¢:"):
            light = line.replace("–°–í–ï–¢:", "").strip()
            formatted += f"‚òÄÔ∏è <b>–û—Å–≤–µ—â–µ–Ω–∏–µ:</b> {light}\n"
            
        elif line.startswith("–¢–ï–ú–ü–ï–†–ê–¢–£–†–ê:"):
            temp = line.replace("–¢–ï–ú–ü–ï–†–ê–¢–£–†–ê:", "").strip()
            formatted += f"üå°Ô∏è <b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {temp}\n"
            
        elif line.startswith("–í–õ–ê–ñ–ù–û–°–¢–¨:"):
            humidity = line.replace("–í–õ–ê–ñ–ù–û–°–¢–¨:", "").strip()
            formatted += f"üí® <b>–í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {humidity}\n"
            
        elif line.startswith("–ü–û–î–ö–û–†–ú–ö–ê:"):
            feeding = line.replace("–ü–û–î–ö–û–†–ú–ö–ê:", "").strip()
            formatted += f"üçΩÔ∏è <b>–ü–æ–¥–∫–æ—Ä–º–∫–∞:</b> {feeding}\n"
        
        elif line.startswith("–°–û–í–ï–¢:"):
            advice = line.replace("–°–û–í–ï–¢:", "").strip()
            formatted += f"\nüí° <b>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç:</b> {advice}"
        
        elif line.startswith("–°–ï–ó–û–ù–ù–´–ô_–°–û–í–ï–¢:"):
            seasonal_advice = line.replace("–°–ï–ó–û–ù–ù–´–ô_–°–û–í–ï–¢:", "").strip()
            formatted += f"\n\nüåç <b>–í–∞–∂–Ω–æ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–µ–∑–æ–Ω–∞:</b> {seasonal_advice}"
    
    if state_info:
        current_state = state_info.get('current_state', 'healthy')
        state_emoji = STATE_EMOJI.get(current_state, 'üå±')
        state_name = STATE_NAMES.get(current_state, '–ó–¥–æ—Ä–æ–≤–æ–µ')
        
        formatted = f"\n{state_emoji} <b>–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:</b> {state_name}\n" + formatted
        
        if state_info.get('state_reason'):
            formatted += f"\nüìã <b>–ü–æ—á–µ–º—É:</b> {state_info['state_reason']}"
    
    if confidence_level >= 80:
        formatted += "\n\nüèÜ <i>–í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è</i>"
    elif confidence_level >= 60:
        formatted += "\n\nüëç <i>–•–æ—Ä–æ—à–µ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ</i>"
    else:
        formatted += "\n\nü§î <i>–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</i>"
    
    formatted += "\nüíæ <i>–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π!</i>"
    
    return formatted


def get_state_recommendations(state: str, plant_name: str = "—Ä–∞—Å—Ç–µ–Ω–∏–µ") -> str:
    """–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞—Å—Ç–µ–Ω–∏—è"""
    template = STATE_RECOMMENDATIONS.get(state, STATE_RECOMMENDATIONS['healthy'])
    return template.format(plant_name=plant_name)
